{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array-base-arraylike2object';\nimport isSameValue from '@stdlib/assert-is-same-value';\n\n\n// FUNCTIONS //\n\n/**\n* Returns the index of the last element which equals a provided search element according to the same value algorithm.\n*\n* @private\n* @param {Collection} x - input array\n* @param {*} searchElement - search element\n* @param {NonNegativeInteger} fromIndex - starting index (inclusive)\n* @returns {integer} index\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var idx = internal( x, 2, 3 );\n* // returns 1\n*/\nfunction internal( x, searchElement, fromIndex ) {\n\tvar i;\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tif ( isSameValue( searchElement, x[ i ] ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n* Returns the index of the last element which equals a provided search element according to the same value algorithm.\n*\n* @private\n* @param {Object} x - input array object\n* @param {*} searchElement - search element\n* @param {NonNegativeInteger} fromIndex - starting index (inclusive)\n* @returns {integer} index\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 3, 4 ] ) );\n*\n* var idx = accessors( x, 2, 3 );\n* // returns 1\n*/\nfunction accessors( x, searchElement, fromIndex ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tif ( isSameValue( searchElement, get( data, i ) ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// MAIN //\n\n/**\n* Returns the index of the last element which equals a provided search element according to the same value algorithm.\n*\n* ## Notes\n*\n* -   If unable to find an element which equals a provided search element, the function returns `-1`.\n*\n* @param {Collection} x - input array\n* @param {*} searchElement - search element\n* @param {integer} fromIndex - starting index (inclusive)\n* @returns {integer} index\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var idx = lastIndexOfSameValue( x, 2, 3 );\n* // returns 1\n*\n* @example\n* import Int32Array from '@stdlib/array-int32';\n*\n* var x = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var idx = lastIndexOfSameValue( x, 2, 3 );\n* // returns 1\n*/\nfunction lastIndexOfSameValue( x, searchElement, fromIndex ) {\n\tvar obj;\n\tif ( fromIndex < 0 ) {\n\t\tfromIndex += x.length;\n\t\tif ( fromIndex < 0 ) {\n\t\t\treturn -1;\n\t\t}\n\t} else if ( fromIndex > x.length ) {\n\t\tfromIndex = x.length - 1;\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, searchElement, fromIndex );\n\t}\n\treturn internal( x, searchElement, fromIndex );\n}\n\n\n// EXPORTS //\n\nexport default lastIndexOfSameValue;\n"],"names":["lastIndexOfSameValue","x","searchElement","fromIndex","obj","length","arraylike2object","accessorProtocol","data","get","i","accessors","isSameValue","internal"],"mappings":";;uLAoHA,SAASA,EAAsBC,EAAGC,EAAeC,GAChD,IAAIC,EACJ,GAAKD,EAAY,GAEhB,IADAA,GAAaF,EAAEI,QACE,EAChB,OAAQ,OAEEF,EAAYF,EAAEI,SACzBF,EAAYF,EAAEI,OAAS,GAGxB,OADAD,EAAME,EAAkBL,IACfM,iBAxDV,SAAoBN,EAAGC,EAAeC,GACrC,IAAIK,EACAC,EACAC,EAKJ,IAHAF,EAAOP,EAAEO,KACTC,EAAMR,EAAEU,UAAW,GAEbD,EAAIP,EAAWO,GAAK,EAAGA,IAC5B,GAAKE,EAAaV,EAAeO,EAAKD,EAAME,IAC3C,OAAOA,EAGT,OAAQ,CACT,CA2CSC,CAAWP,EAAKF,EAAeC,GArFxC,SAAmBF,EAAGC,EAAeC,GACpC,IAAIO,EACJ,IAAMA,EAAIP,EAAWO,GAAK,EAAGA,IAC5B,GAAKE,EAAaV,EAAeD,EAAGS,IACnC,OAAOA,EAGT,OAAQ,CACT,CA+EQG,CAAUZ,EAAGC,EAAeC,EACpC"}